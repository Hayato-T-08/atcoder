{
	// Place your atcoder ワークスペース snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"base": {
		"scope": "cpp",
		"prefix": "base",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#include <atcoder/all>",
			"using namespace atcoder;",
			"#define rep(i, n) for (int i = 0; i < (int)(n); i++)",
			"#define rep1(i, n) for (int i = 1; i < (int)(n+1); i++)",
			"#define rep3(i, m, n) for (int i = (int)(m); i < (int)(n); i++)",
			"using ll = long long;",
			"using P = pair<int,int>;",
			"using Graph = vector<vector<int>>;",
			"using mint = modint1000000007;",
			
			"int main() {",
			"    int n;",
			"    cin >> n;",
		
			"    int ans = 0;",
		
			"    cout << ans << endl;",
			"    return 0;",
			"}",
		],
		"description": "Base C++ code"
	},
}